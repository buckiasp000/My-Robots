from sensor import SENSORfrom motor import MOTORimport pybullet as pimport pybullet_dataimport pyrosim.pyrosim as pyrosimimport constants as cfrom pyrosim.neuralNetwork import NEURAL_NETWORKclass ROBOT:    def __init__(self,r):        self.robot = r        self.nn = NEURAL_NETWORK("brain.nndf")            def Prepare_To_Sense(self):                self.sensors = {}        for linkName in pyrosim.linkNamesToIndices:            self.sensors[linkName] = SENSOR(linkName)                def Sense(self, timeStep):        for sensor in self.sensors:            self.sensors[sensor].GetValue(timeStep)                def Prepare_To_Act(self):        self.motors = {}        for jointName in pyrosim.jointNamesToIndices:            self.motors[jointName] = MOTOR(jointName)                def Act(self, timeStep):        for neuronName in self.nn.Get_Neuron_Names():            if self.nn.Is_Motor_Neuron(neuronName):                jointName = self.nn.Get_Motor_Neurons_Joint(neuronName)                desiredAngle = self.nn.Get_Value_Of(neuronName)                self.motors[jointName].SetValue(self.robot,desiredAngle, timeStep)                def Think(self):        self.nn.Update()        self.nn.Print()            def Get_Fitness(self):        stateOfLinkZero = p.getLinkState(self.robot,0)        positionOfLinkZero = stateOfLinkZero[0]        xCoordinateOfLinkZero = positionOfLinkZero[0]        f = open("fitness.txt", "w")        f.write(str(xCoordinateOfLinkZero))        f.close()        